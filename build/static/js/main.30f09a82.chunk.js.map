{"version":3,"sources":["components/Title.tsx","components/Message.tsx","utils/fileUpload.ts","hooks/useUploadImage.ts","components/DragAndDrop.tsx","components/ImageSelected.tsx","components/BoxDragAndDrop.tsx","App.tsx","index.tsx","components/TRANSAUTOS PG.svg"],"names":["Title","react_default","a","createElement","Fragment","className","Title_SVG","SVG","src","Logo","alt","Message","_ref","urlImage","target","href","fileUpload","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","file","cloudinaryUrl","formData","res","data","wrap","_context","prev","next","concat","process","FormData","append","fetch","method","body","sent","ok","abrupt","json","secure_url","t0","stop","_x","apply","this","arguments","DragAndDrop","_useUploadImage","_useState","useState","_useState2","slicedToArray","images","setImages","_useState3","_useState4","loading","setLoading","_useState5","_useState6","setUrlImage","onUpload","useUploadImage_regeneratorRuntime","url","alert","useEffect","timeout","setTimeout","clearTimeout","handleChange","imageList","useUploadImage","rest","objectWithoutProperties","Message_Message","dist_default","multiple","value","onChange","maxNumber","onImageUpload","dragProps","isDragging","onImageRemove","onImageUpdate","ImageSelected_ImageSelected","assign","objectSpread","img","dataURL","BoxDragAndDrop_BoxDragAndDrop","ImageSelected","width","disabled","onClick","BoxDragAndDrop","App","Title_Title","DragAndDrop_DragAndDrop","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.30f09a82.chunk.js","sourcesContent":["    import React from 'react';\r\nimport Logo from './TRANSAUTOS PG.svg'\r\n\r\nexport const Title = () => {\r\n    return (\r\n        <>\r\n        <div className='container_blob'>\r\n            <SVG/>\r\n        </div>\r\n        <h1 className=\"title\">\r\n{/*             <span>TransAutos</span><br />\r\n            <span> PG SAS</span> <br /> */}\r\n        </h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const SVG = () => {\r\n    return (\r\n        <div >\r\n            <img className='image' src={Logo} alt=\"Logo\" />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\ninterface Props {\r\n    urlImage: string | null\r\n}\r\n\r\nexport const Message = ({ urlImage }: Props) => {\r\n    return (\r\n        <>\r\n            {\r\n                urlImage && <span className='url-cloudinary-sumbit'>\r\n                    Your Image uploaded successfully! ✅ \r\n                    <br/>\r\n                    <br/>\r\n                    <a className='viewImage' target='_blank' href={urlImage}> View Image</a>\r\n                </span>\r\n            }\r\n        </>\r\n    )\r\n}","// Documemtation about of how to upload Images in cloudinary \r\n// https://cloudinary.com/documentation/image_upload_api_reference\r\n\r\nconst cloud_name = process.env.REACT_APP_CLOUD_NAME;\r\nconst preset = process.env.REACT_APP_PRESET;\r\n\r\n\r\nexport const fileUpload = async (file: File): Promise<string | null> => {\r\n    const cloudinaryUrl = `https://api.cloudinary.com/v1_1/${cloud_name}/image/upload`\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', `${preset}`)\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const res = await fetch(cloudinaryUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (!res.ok) return null;\r\n        \r\n        const data = await res.json();\r\n        return data.secure_url;\r\n\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n\r\n};","import {useEffect, useState} from 'react';\r\nimport { ImageListType } from \"react-images-uploading\";\r\nimport { fileUpload } from \"../utils\";\r\n\r\nexport const useUploadImage = () => {\r\n\r\n    const [images, setImages] = useState<ImageListType>([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [urlImage, setUrlImage] = useState('')\r\n  \r\n    const handleChange = (imageList: ImageListType) => setImages(imageList);\r\n  \r\n    const onUpload = async () => {\r\n      setLoading(true);\r\n      const url = await fileUpload(images[0].file!);\r\n      setLoading(false);\r\n\r\n      if (url) setUrlImage(url);\r\n      else alert('Error, please try again later. ❌')\r\n\r\n      setImages([]);\r\n    }\r\n  \r\n    useEffect(() => {\r\n      let timeout: NodeJS.Timeout;\r\n      if(urlImage){\r\n        timeout = setTimeout(()=> {\r\n          setUrlImage('')\r\n        }, 5000)\r\n      }\r\n    \r\n      return () => {\r\n       clearTimeout(timeout);\r\n      }\r\n    }, [urlImage])\r\n\r\n\r\n\r\n    return {\r\n        loading,\r\n        onUpload,\r\n        handleChange,\r\n        urlImage,\r\n        images\r\n    }\r\n}","import React from 'react';\r\nimport ImageUploading from \"react-images-uploading\";\r\nimport { useUploadImage } from '../hooks';\r\n\r\nimport { ImageSelected, BoxDragAndDrop, Message } from './';\r\n\r\n\r\nexport const DragAndDrop = () => {\r\n\r\n  const { urlImage, handleChange, images, ...rest } = useUploadImage();\r\n\r\n  return (\r\n    <>\r\n      <Message urlImage={urlImage} />\r\n      <ImageUploading multiple={false} value={images} onChange={handleChange} maxNumber={1}>\r\n        {({\r\n          imageList,\r\n          onImageUpload,\r\n          dragProps,\r\n          isDragging,\r\n          onImageRemove,\r\n          onImageUpdate,\r\n        }) => (\r\n          <>\r\n            {\r\n              imageList[0]\r\n                ? <ImageSelected  {...{ onImageRemove, onImageUpdate, ...rest }} img={imageList[0].dataURL!} />\r\n                : <BoxDragAndDrop {...{ onImageUpload, dragProps, isDragging }} />\r\n            }\r\n          </>\r\n        )}\r\n      </ImageUploading>\r\n    </>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  img: string;\r\n  onUpload: () => Promise<void>;\r\n  onImageRemove: (index: number) => void;\r\n  onImageUpdate: (index: number) => void\r\n}\r\n\r\nexport const ImageSelected = ({ img, loading, onUpload, onImageRemove, onImageUpdate }: Props) => {\r\n  return (\r\n    <div>\r\n      <img className='image-selected' src={img} alt='image-selected' width={300} />\r\n      <div className='container-buttons'>\r\n        {\r\n          loading\r\n            ? <p className='loading-label'>Upload image ⏳...</p>\r\n            : <>\r\n              <button disabled={loading} onClick={onUpload}>Upload 📤</button>\r\n              <button disabled={loading} onClick={() => onImageUpdate(0)}>Update ✏️</button>\r\n              <button disabled={loading} onClick={() => onImageRemove(0)}>Cancel ❌</button>\r\n            </>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\ninterface Props{\r\n    onImageUpload: () => void;\r\n    dragProps: any;\r\n    isDragging: boolean\r\n  }\r\n  \r\n  export const BoxDragAndDrop = ({ isDragging, onImageUpload, dragProps }:Props) => {\r\n    return (\r\n      <div\r\n        onClick={onImageUpload}\r\n        {...dragProps}\r\n        className={`container-dnd center-flex ${isDragging ? 'isDragging' : ''}`}\r\n      >\r\n        <span className='label-dnd'>Chosee an Image or Drag and Drop an Image 📤</span>\r\n      </div>\r\n    )\r\n  }\r\n  ","import React from 'react';\r\nimport { DragAndDrop, Title } from './components';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"container-grid\">\r\n      <Title />\r\n      <DragAndDrop/>\r\n    </div>\r\n  )\r\n}\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/TRANSAUTOS PG.8ba2addc.svg\";"],"sourceRoot":""}